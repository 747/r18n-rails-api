= Merb R18n

A plugin for the Merb framework that provides i18n support to translate your
site in several languages.

It is just a wrap for R18n core library. See R18n documentation for more
information.

== Features

* It has special support for countries with two official languages. If there
  isn’t translation in user locale, it will be found in locales, which
  user may know (not only in default locale). For example, many people in 
  Belarus can understand Russian, and locale has information about it.
* It can format numbers and time to the rules of the user locale, translate
  month and week days name and give other locale information.
* It has translation for commons words, like “OK”, “Cancel”, etc.
* It storage translation in rich YAML format. You can put procedures and
  pluralization (“1 comment”, “5 comments”) in your translation.

== How To

=== Merb App
1. Add merb_r18n to your merb application in <tt>config/dependencies.rb</tt>:
   
     dependency 'merb_r18n'
   
2. Add route to set locale manually in your <tt>config/router.rb</tt>.
   For example set available translations:
   
     Merb::Router.prepare do
       match('(/:locale)', :locale => /(en|ru)/) do
         # Your application routers.
         default_routes
       end
     end
  
   You may use another way, just set :locale param.
3. Create translations file in <tt>app/i18n/</tt>.
   For example <tt>app/i18n/en.yml</tt>:
   
     post:
       add: Add post
       edit: Edit %1
    
     comments: !!pl
       0: No comments
       1: One comment
       n: %1 comments
   
4. Use translation messages in view. For example:
   
     <%= link_to i18n.post.add, 'posts/add' %>
     <%= link_to i18n.post.edit(post.title), "posts/edit/#{@post.id}" %>
     <%= link_to i18n.delete, "posts/delete/#{@post.id}" %>
     
     <h1><%= i18n.comments(@post.comments.size) %></h1>
   
5. Print localized time and numbers. For example:
   
     <%= i18n.l @post.created_at, :date %>
   
6. Print available translations:
   
     <ul>
       <% i18n.translations.each_pair do |locale, title| %>
       <li><a href="/<%= locale %>/"><%= title %></a></li>
       <% end %>
     </ul>

=== Merb Slice
1. Add merb_r18n to your merb slice in <tt>lib/_YOUR_SLICE_.rb</tt>:
   
     dependency 'merb_r18n'

2. Create translations file in <tt>app/i18n/</tt>.
   For example <tt>app/i18n/en.yml</tt>:
   
     post:
       add: Add post
       edit: Edit %1
    
     comments: !!pl
       0: No comments
       1: One comment
       n: %1 comments
   
3. Use translation messages in view. For example:
     
     <h1><%= i18n.comments(@post.comments.size) %></h1>
   
4. Print localized time and numbers. For example:
   
     <%= i18n.l @post.created_at, :date %>
  
5. In host application you can override translations. Just create files in
   <tt>app/i18n/</tt> in _application_ root.
   For example <tt>app/i18n/en.yml</tt>:
   
     post:
       add: Write your idea
   
== License
R18n is licensed under the GNU Lesser General Public License version 3.
You can read it in LICENSE file or in http://www.gnu.org/licenses/lgpl.html.

== Author
Andrey “A.I.” Sitnik <andrey@sitnik.ru>
